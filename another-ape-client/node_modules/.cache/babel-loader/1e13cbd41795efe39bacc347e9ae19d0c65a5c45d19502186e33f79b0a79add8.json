{"ast":null,"code":"var AWS = require('../core');\n\n/**\n * Constructs a service interface object. Each API operation is exposed as a\n * function on service.\n *\n * ### Sending a Request Using CloudSearchDomain\n *\n * ```javascript\n * var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n * csd.search(params, function (err, data) {\n *   if (err) console.log(err, err.stack); // an error occurred\n *   else     console.log(data);           // successful response\n * });\n * ```\n *\n * ### Locking the API Version\n *\n * In order to ensure that the CloudSearchDomain object uses this specific API,\n * you can construct the object by passing the `apiVersion` option to the\n * constructor:\n *\n * ```javascript\n * var csd = new AWS.CloudSearchDomain({\n *   endpoint: 'my.host.tld',\n *   apiVersion: '2013-01-01'\n * });\n * ```\n *\n * You can also set the API version globally in `AWS.config.apiVersions` using\n * the **cloudsearchdomain** service identifier:\n *\n * ```javascript\n * AWS.config.apiVersions = {\n *   cloudsearchdomain: '2013-01-01',\n *   // other service API versions\n * };\n *\n * var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n * ```\n *\n * @note You *must* provide an `endpoint` configuration parameter when\n *   constructing this service. See {constructor} for more information.\n *\n * @!method constructor(options = {})\n *   Constructs a service object. This object has one method for each\n *   API operation.\n *\n *   @example Constructing a CloudSearchDomain object\n *     var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n *   @note You *must* provide an `endpoint` when constructing this service.\n *   @option (see AWS.Config.constructor)\n *\n * @service cloudsearchdomain\n * @version 2013-01-01\n */\nAWS.util.update(AWS.CloudSearchDomain.prototype, {\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    if (!this.config.endpoint || this.config.endpoint.indexOf('{') >= 0) {\n      var msg = 'AWS.CloudSearchDomain requires an explicit ' + '`endpoint\\' configuration option.';\n      throw AWS.util.error(new Error(), {\n        name: 'InvalidEndpoint',\n        message: msg\n      });\n    }\n  },\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);\n    request.onAsync('validate', this.validateCredentials);\n    request.addListener('validate', this.updateRegion);\n    if (request.operation === 'search') {\n      request.addListener('build', this.convertGetToPost);\n    }\n  },\n  /**\n   * @api private\n   */\n  validateCredentials: function (req, done) {\n    if (!req.service.api.signatureVersion) return done(); // none\n    req.service.config.getCredentials(function (err) {\n      if (err) {\n        req.removeListener('sign', AWS.EventListeners.Core.SIGN);\n      }\n      done();\n    });\n  },\n  /**\n   * @api private\n   */\n  convertGetToPost: function (request) {\n    var httpRequest = request.httpRequest;\n    if (httpRequest.method === 'POST') {\n      return;\n    }\n    // convert queries to POST to avoid length restrictions\n    var path = httpRequest.path.split('?');\n    httpRequest.method = 'POST';\n    httpRequest.path = path[0];\n    httpRequest.body = path[1];\n    httpRequest.headers['Content-Length'] = httpRequest.body.length;\n    httpRequest.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  },\n  /**\n   * @api private\n   */\n  updateRegion: function updateRegion(request) {\n    var endpoint = request.httpRequest.endpoint.hostname;\n    var zones = endpoint.split('.');\n    request.httpRequest.region = zones[1] || request.httpRequest.region;\n  }\n});","map":{"version":3,"names":["AWS","require","util","update","CloudSearchDomain","prototype","validateService","config","endpoint","indexOf","msg","error","Error","name","message","setupRequestListeners","request","removeListener","EventListeners","Core","VALIDATE_CREDENTIALS","onAsync","validateCredentials","addListener","updateRegion","operation","convertGetToPost","req","done","service","api","signatureVersion","getCredentials","err","SIGN","httpRequest","method","path","split","body","headers","length","hostname","zones","region"],"sources":["/home/ryanosull/clarity/clarity-camp/projects/nft-vids/another-ape-client/node_modules/aws-sdk/lib/services/cloudsearchdomain.js"],"sourcesContent":["var AWS = require('../core');\n\n/**\n * Constructs a service interface object. Each API operation is exposed as a\n * function on service.\n *\n * ### Sending a Request Using CloudSearchDomain\n *\n * ```javascript\n * var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n * csd.search(params, function (err, data) {\n *   if (err) console.log(err, err.stack); // an error occurred\n *   else     console.log(data);           // successful response\n * });\n * ```\n *\n * ### Locking the API Version\n *\n * In order to ensure that the CloudSearchDomain object uses this specific API,\n * you can construct the object by passing the `apiVersion` option to the\n * constructor:\n *\n * ```javascript\n * var csd = new AWS.CloudSearchDomain({\n *   endpoint: 'my.host.tld',\n *   apiVersion: '2013-01-01'\n * });\n * ```\n *\n * You can also set the API version globally in `AWS.config.apiVersions` using\n * the **cloudsearchdomain** service identifier:\n *\n * ```javascript\n * AWS.config.apiVersions = {\n *   cloudsearchdomain: '2013-01-01',\n *   // other service API versions\n * };\n *\n * var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n * ```\n *\n * @note You *must* provide an `endpoint` configuration parameter when\n *   constructing this service. See {constructor} for more information.\n *\n * @!method constructor(options = {})\n *   Constructs a service object. This object has one method for each\n *   API operation.\n *\n *   @example Constructing a CloudSearchDomain object\n *     var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n *   @note You *must* provide an `endpoint` when constructing this service.\n *   @option (see AWS.Config.constructor)\n *\n * @service cloudsearchdomain\n * @version 2013-01-01\n */\nAWS.util.update(AWS.CloudSearchDomain.prototype, {\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    if (!this.config.endpoint || this.config.endpoint.indexOf('{') >= 0) {\n      var msg = 'AWS.CloudSearchDomain requires an explicit ' +\n                '`endpoint\\' configuration option.';\n      throw AWS.util.error(new Error(),\n        {name: 'InvalidEndpoint', message: msg});\n    }\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('validate',\n      AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n    );\n    request.onAsync('validate', this.validateCredentials);\n    request.addListener('validate', this.updateRegion);\n    if (request.operation === 'search') {\n      request.addListener('build', this.convertGetToPost);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateCredentials: function(req, done) {\n    if (!req.service.api.signatureVersion) return done(); // none\n    req.service.config.getCredentials(function(err) {\n      if (err) {\n        req.removeListener('sign', AWS.EventListeners.Core.SIGN);\n      }\n      done();\n    });\n  },\n\n  /**\n   * @api private\n   */\n  convertGetToPost: function(request) {\n    var httpRequest = request.httpRequest;\n    if (httpRequest.method === 'POST') {\n      return;\n    }\n    // convert queries to POST to avoid length restrictions\n    var path = httpRequest.path.split('?');\n    httpRequest.method = 'POST';\n    httpRequest.path = path[0];\n    httpRequest.body = path[1];\n    httpRequest.headers['Content-Length'] = httpRequest.body.length;\n    httpRequest.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  },\n\n  /**\n   * @api private\n   */\n  updateRegion: function updateRegion(request) {\n    var endpoint = request.httpRequest.endpoint.hostname;\n    var zones = endpoint.split('.');\n    request.httpRequest.region = zones[1] || request.httpRequest.region;\n  }\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}