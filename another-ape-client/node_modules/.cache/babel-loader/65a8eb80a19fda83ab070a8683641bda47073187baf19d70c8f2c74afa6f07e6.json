{"ast":null,"code":"var util = require('../core').util;\nvar dgram = require('dgram');\nvar stringToBuffer = util.buffer.toBuffer;\nvar MAX_MESSAGE_SIZE = 1024 * 8; // 8 KB\n\n/**\n * Publishes metrics via udp.\n * @param {object} options Paramters for Publisher constructor\n * @param {number} [options.port = 31000] Port number\n * @param {string} [options.clientId = ''] Client Identifier\n * @param {boolean} [options.enabled = false] enable sending metrics datagram\n * @api private\n */\nfunction Publisher(options) {\n  // handle configuration\n  options = options || {};\n  this.enabled = options.enabled || false;\n  this.port = options.port || 31000;\n  this.clientId = options.clientId || '';\n  this.address = options.host || '127.0.0.1';\n  if (this.clientId.length > 255) {\n    // ClientId has a max length of 255\n    this.clientId = this.clientId.substr(0, 255);\n  }\n  this.messagesInFlight = 0;\n}\nPublisher.prototype.fieldsToTrim = {\n  UserAgent: 256,\n  SdkException: 128,\n  SdkExceptionMessage: 512,\n  AwsException: 128,\n  AwsExceptionMessage: 512,\n  FinalSdkException: 128,\n  FinalSdkExceptionMessage: 512,\n  FinalAwsException: 128,\n  FinalAwsExceptionMessage: 512\n};\n\n/**\n * Trims fields that have a specified max length.\n * @param {object} event ApiCall or ApiCallAttempt event.\n * @returns {object}\n * @api private\n */\nPublisher.prototype.trimFields = function (event) {\n  var trimmableFields = Object.keys(this.fieldsToTrim);\n  for (var i = 0, iLen = trimmableFields.length; i < iLen; i++) {\n    var field = trimmableFields[i];\n    if (event.hasOwnProperty(field)) {\n      var maxLength = this.fieldsToTrim[field];\n      var value = event[field];\n      if (value && value.length > maxLength) {\n        event[field] = value.substr(0, maxLength);\n      }\n    }\n  }\n  return event;\n};\n\n/**\n * Handles ApiCall and ApiCallAttempt events.\n * @param {Object} event apiCall or apiCallAttempt event.\n * @api private\n */\nPublisher.prototype.eventHandler = function (event) {\n  // set the clientId\n  event.ClientId = this.clientId;\n  this.trimFields(event);\n  var message = stringToBuffer(JSON.stringify(event));\n  if (!this.enabled || message.length > MAX_MESSAGE_SIZE) {\n    // drop the message if publisher not enabled or it is too large\n    return;\n  }\n  this.publishDatagram(message);\n};\n\n/**\n * Publishes message to an agent.\n * @param {Buffer} message JSON message to send to agent.\n * @api private\n */\nPublisher.prototype.publishDatagram = function (message) {\n  var self = this;\n  var client = this.getClient();\n  this.messagesInFlight++;\n  this.client.send(message, 0, message.length, this.port, this.address, function (err, bytes) {\n    if (--self.messagesInFlight <= 0) {\n      // destroy existing client so the event loop isn't kept open\n      self.destroyClient();\n    }\n  });\n};\n\n/**\n * Returns an existing udp socket, or creates one if it doesn't already exist.\n * @api private\n */\nPublisher.prototype.getClient = function () {\n  if (!this.client) {\n    this.client = dgram.createSocket('udp4');\n  }\n  return this.client;\n};\n\n/**\n * Destroys the udp socket.\n * @api private\n */\nPublisher.prototype.destroyClient = function () {\n  if (this.client) {\n    this.client.close();\n    this.client = void 0;\n  }\n};\nmodule.exports = {\n  Publisher: Publisher\n};","map":{"version":3,"names":["util","require","dgram","stringToBuffer","buffer","toBuffer","MAX_MESSAGE_SIZE","Publisher","options","enabled","port","clientId","address","host","length","substr","messagesInFlight","prototype","fieldsToTrim","UserAgent","SdkException","SdkExceptionMessage","AwsException","AwsExceptionMessage","FinalSdkException","FinalSdkExceptionMessage","FinalAwsException","FinalAwsExceptionMessage","trimFields","event","trimmableFields","Object","keys","i","iLen","field","hasOwnProperty","maxLength","value","eventHandler","ClientId","message","JSON","stringify","publishDatagram","self","client","getClient","send","err","bytes","destroyClient","createSocket","close","module","exports"],"sources":["/home/ryanosull/clarity/clarity-camp/projects/nft-vids/another-ape-client/node_modules/aws-sdk/lib/publisher/index.js"],"sourcesContent":["var util = require('../core').util;\nvar dgram = require('dgram');\nvar stringToBuffer = util.buffer.toBuffer;\n\nvar MAX_MESSAGE_SIZE = 1024 * 8; // 8 KB\n\n/**\n * Publishes metrics via udp.\n * @param {object} options Paramters for Publisher constructor\n * @param {number} [options.port = 31000] Port number\n * @param {string} [options.clientId = ''] Client Identifier\n * @param {boolean} [options.enabled = false] enable sending metrics datagram\n * @api private\n */\nfunction Publisher(options) {\n    // handle configuration\n    options = options || {};\n    this.enabled = options.enabled || false;\n    this.port = options.port || 31000;\n    this.clientId = options.clientId || '';\n    this.address = options.host || '127.0.0.1';\n    if (this.clientId.length > 255) {\n        // ClientId has a max length of 255\n        this.clientId = this.clientId.substr(0, 255);\n    }\n    this.messagesInFlight = 0;\n}\n\nPublisher.prototype.fieldsToTrim = {\n    UserAgent: 256,\n    SdkException: 128,\n    SdkExceptionMessage: 512,\n    AwsException: 128,\n    AwsExceptionMessage: 512,\n    FinalSdkException: 128,\n    FinalSdkExceptionMessage: 512,\n    FinalAwsException: 128,\n    FinalAwsExceptionMessage: 512\n\n};\n\n/**\n * Trims fields that have a specified max length.\n * @param {object} event ApiCall or ApiCallAttempt event.\n * @returns {object}\n * @api private\n */\nPublisher.prototype.trimFields = function(event) {\n    var trimmableFields = Object.keys(this.fieldsToTrim);\n    for (var i = 0, iLen = trimmableFields.length; i < iLen; i++) {\n        var field = trimmableFields[i];\n        if (event.hasOwnProperty(field)) {\n            var maxLength = this.fieldsToTrim[field];\n            var value = event[field];\n            if (value && value.length > maxLength) {\n                event[field] = value.substr(0, maxLength);\n            }\n        }\n    }\n    return event;\n};\n\n/**\n * Handles ApiCall and ApiCallAttempt events.\n * @param {Object} event apiCall or apiCallAttempt event.\n * @api private\n */\nPublisher.prototype.eventHandler = function(event) {\n    // set the clientId\n    event.ClientId = this.clientId;\n\n    this.trimFields(event);\n\n    var message = stringToBuffer(JSON.stringify(event));\n    if (!this.enabled || message.length > MAX_MESSAGE_SIZE) {\n        // drop the message if publisher not enabled or it is too large\n        return;\n    }\n\n    this.publishDatagram(message);\n};\n\n/**\n * Publishes message to an agent.\n * @param {Buffer} message JSON message to send to agent.\n * @api private\n */\nPublisher.prototype.publishDatagram = function(message) {\n    var self = this;\n    var client = this.getClient();\n\n    this.messagesInFlight++;\n    this.client.send(message, 0, message.length, this.port, this.address, function(err, bytes) {\n        if (--self.messagesInFlight <= 0) {\n            // destroy existing client so the event loop isn't kept open\n            self.destroyClient();\n        }\n    });\n};\n\n/**\n * Returns an existing udp socket, or creates one if it doesn't already exist.\n * @api private\n */\nPublisher.prototype.getClient = function() {\n    if (!this.client) {\n        this.client = dgram.createSocket('udp4');\n    }\n    return this.client;\n};\n\n/**\n * Destroys the udp socket.\n * @api private\n */\nPublisher.prototype.destroyClient = function() {\n    if (this.client) {\n        this.client.close();\n        this.client = void 0;\n    }\n};\n\nmodule.exports = {\n    Publisher: Publisher\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}