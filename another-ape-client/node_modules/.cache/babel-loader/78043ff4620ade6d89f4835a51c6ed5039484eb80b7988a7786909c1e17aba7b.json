{"ast":null,"code":"var Transform = require('stream').Transform;\nvar parseEvent = require('./parse-event').parseEvent;\n\n/** @type {Transform} */\nfunction EventUnmarshallerStream(options) {\n  options = options || {};\n  // set output to object mode\n  options.readableObjectMode = true;\n  Transform.call(this, options);\n  this._readableState.objectMode = true;\n  this.parser = options.parser;\n  this.eventStreamModel = options.eventStreamModel;\n}\nEventUnmarshallerStream.prototype = Object.create(Transform.prototype);\n\n/**\n *\n * @param {Buffer} chunk\n * @param {string} encoding\n * @param {*} callback\n */\nEventUnmarshallerStream.prototype._transform = function (chunk, encoding, callback) {\n  try {\n    var event = parseEvent(this.parser, chunk, this.eventStreamModel);\n    this.push(event);\n    return callback();\n  } catch (err) {\n    callback(err);\n  }\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n  EventUnmarshallerStream: EventUnmarshallerStream\n};","map":{"version":3,"names":["Transform","require","parseEvent","EventUnmarshallerStream","options","readableObjectMode","call","_readableState","objectMode","parser","eventStreamModel","prototype","Object","create","_transform","chunk","encoding","callback","event","push","err","module","exports"],"sources":["/home/ryanosull/clarity/clarity-camp/projects/nft-vids/another-ape-client/node_modules/aws-sdk/lib/event-stream/event-message-unmarshaller-stream.js"],"sourcesContent":["var Transform = require('stream').Transform;\nvar parseEvent = require('./parse-event').parseEvent;\n\n/** @type {Transform} */\nfunction EventUnmarshallerStream(options) {\n    options = options || {};\n    // set output to object mode\n    options.readableObjectMode = true;\n    Transform.call(this, options);\n    this._readableState.objectMode = true;\n\n    this.parser = options.parser;\n    this.eventStreamModel = options.eventStreamModel;\n}\n\nEventUnmarshallerStream.prototype = Object.create(Transform.prototype);\n\n/**\n *\n * @param {Buffer} chunk\n * @param {string} encoding\n * @param {*} callback\n */\nEventUnmarshallerStream.prototype._transform = function(chunk, encoding, callback) {\n    try {\n        var event = parseEvent(this.parser, chunk, this.eventStreamModel);\n        this.push(event);\n        return callback();\n    } catch (err) {\n        callback(err);\n    }\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    EventUnmarshallerStream: EventUnmarshallerStream\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,SAAS;AAC3C,IAAIE,UAAU,GAAGD,OAAO,CAAC,eAAe,CAAC,CAACC,UAAU;;AAEpD;AACA,SAASC,uBAAuBA,CAACC,OAAO,EAAE;EACtCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB;EACAA,OAAO,CAACC,kBAAkB,GAAG,IAAI;EACjCL,SAAS,CAACM,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC;EAC7B,IAAI,CAACG,cAAc,CAACC,UAAU,GAAG,IAAI;EAErC,IAAI,CAACC,MAAM,GAAGL,OAAO,CAACK,MAAM;EAC5B,IAAI,CAACC,gBAAgB,GAAGN,OAAO,CAACM,gBAAgB;AACpD;AAEAP,uBAAuB,CAACQ,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACb,SAAS,CAACW,SAAS,CAAC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACAR,uBAAuB,CAACQ,SAAS,CAACG,UAAU,GAAG,UAASC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAC/E,IAAI;IACA,IAAIC,KAAK,GAAGhB,UAAU,CAAC,IAAI,CAACO,MAAM,EAAEM,KAAK,EAAE,IAAI,CAACL,gBAAgB,CAAC;IACjE,IAAI,CAACS,IAAI,CAACD,KAAK,CAAC;IAChB,OAAOD,QAAQ,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVH,QAAQ,CAACG,GAAG,CAAC;EACjB;AACJ,CAAC;;AAED;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG;EACbnB,uBAAuB,EAAEA;AAC7B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}