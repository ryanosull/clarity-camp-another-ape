{"ast":null,"code":"import { utils } from '@noble/secp256k1';\nexport const randomBytes = (bytesLength = 32) => utils.randomBytes(bytesLength);","map":{"version":3,"names":["utils","randomBytes","bytesLength"],"sources":["/home/ryanosull/clarity/clarity-camp/projects/nft-vids/another-ape-client/node_modules/@stacks/encryption/src/cryptoRandom.ts"],"sourcesContent":["import { utils } from '@noble/secp256k1';\n\n/**\n * Reexports @noble/secp256k1's randombytes\n * Generates bytes with random bytes of given length\n * @param bytesLength an optional bytes length, default `32` bytes\n * @return {Uint8Array} random bytes\n */\nexport const randomBytes = (bytesLength: number = 32): Uint8Array => utils.randomBytes(bytesLength);\n\n/** Optional function to generate cryptographically secure random bytes */\nexport type GetRandomBytes = (count: number) => Uint8Array;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAQxC,OAAO,MAAMC,WAAW,GAAGA,CAACC,WAAA,GAAsB,EAAE,KAAiBF,KAAK,CAACC,WAAW,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}