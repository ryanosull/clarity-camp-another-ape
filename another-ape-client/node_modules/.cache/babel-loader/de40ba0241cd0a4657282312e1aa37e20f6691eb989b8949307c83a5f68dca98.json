{"ast":null,"code":"var util = require('./util');\nvar region_utils = require('./region/utils');\nvar isFipsRegion = region_utils.isFipsRegion;\nvar getRealRegion = region_utils.getRealRegion;\nutil.isBrowser = function () {\n  return false;\n};\nutil.isNode = function () {\n  return true;\n};\n\n// node.js specific modules\nutil.crypto.lib = require('crypto');\nutil.Buffer = require('buffer').Buffer;\nutil.domain = require('domain');\nutil.stream = require('stream');\nutil.url = require('url');\nutil.querystring = require('querystring');\nutil.environment = 'nodejs';\nutil.createEventStream = util.stream.Readable ? require('./event-stream/streaming-create-event-stream').createEventStream : require('./event-stream/buffered-create-event-stream').createEventStream;\nutil.realClock = require('./realclock/nodeClock');\nutil.clientSideMonitoring = {\n  Publisher: require('./publisher').Publisher,\n  configProvider: require('./publisher/configuration')\n};\nutil.iniLoader = require('./shared-ini').iniLoader;\nutil.getSystemErrorName = require('util').getSystemErrorName;\nutil.loadConfig = function (options) {\n  var envValue = options.environmentVariableSelector(process.env);\n  if (envValue !== undefined) {\n    return envValue;\n  }\n  var configFile = {};\n  try {\n    configFile = util.iniLoader ? util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[process.env.AWS_PROFILE || util.defaultProfile] || {};\n  var configValue = options.configFileSelector(sharedFileConfig);\n  if (configValue !== undefined) {\n    return configValue;\n  }\n  if (typeof options.default === 'function') {\n    return options.default();\n  }\n  return options.default;\n};\nvar AWS;\n\n/**\n * @api private\n */\nmodule.exports = AWS = require('./core');\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nrequire('./credentials/temporary_credentials');\nrequire('./credentials/chainable_temporary_credentials');\nrequire('./credentials/web_identity_credentials');\nrequire('./credentials/cognito_identity_credentials');\nrequire('./credentials/saml_credentials');\nrequire('./credentials/process_credentials');\n\n// Load the xml2js XML parser\nAWS.XML.Parser = require('./xml/node_parser');\n\n// Load Node HTTP client\nrequire('./http/node');\nrequire('./shared-ini/ini-loader');\n\n// Load custom credential providers\nrequire('./credentials/token_file_web_identity_credentials');\nrequire('./credentials/ec2_metadata_credentials');\nrequire('./credentials/remote_credentials');\nrequire('./credentials/ecs_credentials');\nrequire('./credentials/environment_credentials');\nrequire('./credentials/file_system_credentials');\nrequire('./credentials/shared_ini_file_credentials');\nrequire('./credentials/process_credentials');\nrequire('./credentials/sso_credentials');\n\n// Setup default providers for credentials chain\n// If this changes, please update documentation for\n// AWS.CredentialProviderChain.defaultProviders in\n// credentials/credential_provider_chain.js\nAWS.CredentialProviderChain.defaultProviders = [function () {\n  return new AWS.EnvironmentCredentials('AWS');\n}, function () {\n  return new AWS.EnvironmentCredentials('AMAZON');\n}, function () {\n  return new AWS.SsoCredentials();\n}, function () {\n  return new AWS.SharedIniFileCredentials();\n}, function () {\n  return new AWS.ECSCredentials();\n}, function () {\n  return new AWS.ProcessCredentials();\n}, function () {\n  return new AWS.TokenFileWebIdentityCredentials();\n}, function () {\n  return new AWS.EC2MetadataCredentials();\n}];\n\n// Load custom token providers\nrequire('./token');\nrequire('./token/token_provider_chain');\nrequire('./token/sso_token_provider');\n\n// Setup default providers for token chain\n// If this changes, please update documentation for\n// AWS.TokenProviderChain.defaultProviders in\n// token/token_provider_chain.js\nAWS.TokenProviderChain.defaultProviders = [function () {\n  return new AWS.SSOTokenProvider();\n}];\nvar getRegion = function () {\n  var env = process.env;\n  var region = env.AWS_REGION || env.AMAZON_REGION;\n  if (env[AWS.util.configOptInEnv]) {\n    var toCheck = [{\n      filename: env[AWS.util.sharedCredentialsFileEnv]\n    }, {\n      isConfig: true,\n      filename: env[AWS.util.sharedConfigFileEnv]\n    }];\n    var iniLoader = AWS.util.iniLoader;\n    while (!region && toCheck.length) {\n      var configFile = {};\n      var fileInfo = toCheck.shift();\n      try {\n        configFile = iniLoader.loadFrom(fileInfo);\n      } catch (err) {\n        if (fileInfo.isConfig) throw err;\n      }\n      var profile = configFile[env.AWS_PROFILE || AWS.util.defaultProfile];\n      region = profile && profile.region;\n    }\n  }\n  return region;\n};\nvar getBooleanValue = function (value) {\n  return value === 'true' ? true : value === 'false' ? false : undefined;\n};\nvar USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function (env) {\n    return getBooleanValue(env['AWS_USE_FIPS_ENDPOINT']);\n  },\n  configFileSelector: function (profile) {\n    return getBooleanValue(profile['use_fips_endpoint']);\n  },\n  default: false\n};\nvar USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function (env) {\n    return getBooleanValue(env['AWS_USE_DUALSTACK_ENDPOINT']);\n  },\n  configFileSelector: function (profile) {\n    return getBooleanValue(profile['use_dualstack_endpoint']);\n  },\n  default: false\n};\n\n// Update configuration keys\nAWS.util.update(AWS.Config.prototype.keys, {\n  credentials: function () {\n    var credentials = null;\n    new AWS.CredentialProviderChain([function () {\n      return new AWS.EnvironmentCredentials('AWS');\n    }, function () {\n      return new AWS.EnvironmentCredentials('AMAZON');\n    }, function () {\n      return new AWS.SharedIniFileCredentials({\n        disableAssumeRole: true\n      });\n    }]).resolve(function (err, creds) {\n      if (!err) credentials = creds;\n    });\n    return credentials;\n  },\n  credentialProvider: function () {\n    return new AWS.CredentialProviderChain();\n  },\n  logger: function () {\n    return process.env.AWSJS_DEBUG ? console : null;\n  },\n  region: function () {\n    var region = getRegion();\n    return region ? getRealRegion(region) : undefined;\n  },\n  tokenProvider: function () {\n    return new AWS.TokenProviderChain();\n  },\n  useFipsEndpoint: function () {\n    var region = getRegion();\n    return isFipsRegion(region) ? true : util.loadConfig(USE_FIPS_ENDPOINT_CONFIG_OPTIONS);\n  },\n  useDualstackEndpoint: function () {\n    return util.loadConfig(USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS);\n  }\n});\n\n// Reset configuration\nAWS.config = new AWS.Config();","map":{"version":3,"names":["util","require","region_utils","isFipsRegion","getRealRegion","isBrowser","isNode","crypto","lib","Buffer","domain","stream","url","querystring","environment","createEventStream","Readable","realClock","clientSideMonitoring","Publisher","configProvider","iniLoader","getSystemErrorName","loadConfig","options","envValue","environmentVariableSelector","process","env","undefined","configFile","loadFrom","isConfig","filename","sharedConfigFileEnv","e","sharedFileConfig","AWS_PROFILE","defaultProfile","configValue","configFileSelector","default","AWS","module","exports","XML","Parser","CredentialProviderChain","defaultProviders","EnvironmentCredentials","SsoCredentials","SharedIniFileCredentials","ECSCredentials","ProcessCredentials","TokenFileWebIdentityCredentials","EC2MetadataCredentials","TokenProviderChain","SSOTokenProvider","getRegion","region","AWS_REGION","AMAZON_REGION","configOptInEnv","toCheck","sharedCredentialsFileEnv","length","fileInfo","shift","err","profile","getBooleanValue","value","USE_FIPS_ENDPOINT_CONFIG_OPTIONS","USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS","update","Config","prototype","keys","credentials","disableAssumeRole","resolve","creds","credentialProvider","logger","AWSJS_DEBUG","console","tokenProvider","useFipsEndpoint","useDualstackEndpoint","config"],"sources":["/home/ryanosull/clarity/clarity-camp/projects/nft-vids/another-ape-client/node_modules/aws-sdk/lib/node_loader.js"],"sourcesContent":["var util = require('./util');\n\nvar region_utils = require('./region/utils');\nvar isFipsRegion = region_utils.isFipsRegion;\nvar getRealRegion = region_utils.getRealRegion;\n\nutil.isBrowser = function() { return false; };\nutil.isNode = function() { return true; };\n\n// node.js specific modules\nutil.crypto.lib = require('crypto');\nutil.Buffer = require('buffer').Buffer;\nutil.domain = require('domain');\nutil.stream = require('stream');\nutil.url = require('url');\nutil.querystring = require('querystring');\nutil.environment = 'nodejs';\nutil.createEventStream = util.stream.Readable ?\n  require('./event-stream/streaming-create-event-stream').createEventStream : require('./event-stream/buffered-create-event-stream').createEventStream;\nutil.realClock = require('./realclock/nodeClock');\nutil.clientSideMonitoring = {\n  Publisher: require('./publisher').Publisher,\n  configProvider: require('./publisher/configuration'),\n};\nutil.iniLoader = require('./shared-ini').iniLoader;\nutil.getSystemErrorName = require('util').getSystemErrorName;\n\nutil.loadConfig = function(options) {\n  var envValue = options.environmentVariableSelector(process.env);\n  if (envValue !== undefined) {\n    return envValue;\n  }\n\n  var configFile = {};\n  try {\n    configFile = util.iniLoader ? util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || util.defaultProfile\n  ] || {};\n  var configValue = options.configFileSelector(sharedFileConfig);\n  if (configValue !== undefined) {\n    return configValue;\n  }\n\n  if (typeof options.default === 'function') {\n    return options.default();\n  }\n  return options.default;\n};\n\nvar AWS;\n\n/**\n * @api private\n */\nmodule.exports = AWS = require('./core');\n\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nrequire('./credentials/temporary_credentials');\nrequire('./credentials/chainable_temporary_credentials');\nrequire('./credentials/web_identity_credentials');\nrequire('./credentials/cognito_identity_credentials');\nrequire('./credentials/saml_credentials');\nrequire('./credentials/process_credentials');\n\n// Load the xml2js XML parser\nAWS.XML.Parser = require('./xml/node_parser');\n\n// Load Node HTTP client\nrequire('./http/node');\n\nrequire('./shared-ini/ini-loader');\n\n// Load custom credential providers\nrequire('./credentials/token_file_web_identity_credentials');\nrequire('./credentials/ec2_metadata_credentials');\nrequire('./credentials/remote_credentials');\nrequire('./credentials/ecs_credentials');\nrequire('./credentials/environment_credentials');\nrequire('./credentials/file_system_credentials');\nrequire('./credentials/shared_ini_file_credentials');\nrequire('./credentials/process_credentials');\nrequire('./credentials/sso_credentials');\n\n// Setup default providers for credentials chain\n// If this changes, please update documentation for\n// AWS.CredentialProviderChain.defaultProviders in\n// credentials/credential_provider_chain.js\nAWS.CredentialProviderChain.defaultProviders = [\n  function () { return new AWS.EnvironmentCredentials('AWS'); },\n  function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n  function () { return new AWS.SsoCredentials(); },\n  function () { return new AWS.SharedIniFileCredentials(); },\n  function () { return new AWS.ECSCredentials(); },\n  function () { return new AWS.ProcessCredentials(); },\n  function () { return new AWS.TokenFileWebIdentityCredentials(); },\n  function () { return new AWS.EC2MetadataCredentials(); }\n];\n\n// Load custom token providers\nrequire('./token');\nrequire('./token/token_provider_chain');\nrequire('./token/sso_token_provider');\n\n// Setup default providers for token chain\n// If this changes, please update documentation for\n// AWS.TokenProviderChain.defaultProviders in\n// token/token_provider_chain.js\nAWS.TokenProviderChain.defaultProviders = [\n  function () { return new AWS.SSOTokenProvider(); },\n];\n\nvar getRegion = function() {\n  var env = process.env;\n  var region = env.AWS_REGION || env.AMAZON_REGION;\n  if (env[AWS.util.configOptInEnv]) {\n    var toCheck = [\n      {filename: env[AWS.util.sharedCredentialsFileEnv]},\n      {isConfig: true, filename: env[AWS.util.sharedConfigFileEnv]}\n    ];\n    var iniLoader = AWS.util.iniLoader;\n    while (!region && toCheck.length) {\n      var configFile = {};\n      var fileInfo = toCheck.shift();\n      try {\n        configFile = iniLoader.loadFrom(fileInfo);\n      } catch (err) {\n        if (fileInfo.isConfig) throw err;\n      }\n      var profile = configFile[env.AWS_PROFILE || AWS.util.defaultProfile];\n      region = profile && profile.region;\n    }\n  }\n  return region;\n};\n\nvar getBooleanValue = function(value) {\n  return value === 'true' ? true: value === 'false' ? false: undefined;\n};\n\nvar USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function(env) {\n    return getBooleanValue(env['AWS_USE_FIPS_ENDPOINT']);\n  },\n  configFileSelector: function(profile) {\n    return getBooleanValue(profile['use_fips_endpoint']);\n  },\n  default: false,\n};\n\nvar USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function(env) {\n    return getBooleanValue(env['AWS_USE_DUALSTACK_ENDPOINT']);\n  },\n  configFileSelector: function(profile) {\n    return getBooleanValue(profile['use_dualstack_endpoint']);\n  },\n  default: false,\n};\n\n// Update configuration keys\nAWS.util.update(AWS.Config.prototype.keys, {\n  credentials: function () {\n    var credentials = null;\n    new AWS.CredentialProviderChain([\n      function () { return new AWS.EnvironmentCredentials('AWS'); },\n      function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n      function () { return new AWS.SharedIniFileCredentials({ disableAssumeRole: true }); }\n    ]).resolve(function(err, creds) {\n      if (!err) credentials = creds;\n    });\n    return credentials;\n  },\n  credentialProvider: function() {\n    return new AWS.CredentialProviderChain();\n  },\n  logger: function () {\n    return process.env.AWSJS_DEBUG ? console : null;\n  },\n  region: function() {\n    var region = getRegion();\n    return region ? getRealRegion(region): undefined;\n  },\n  tokenProvider: function() {\n    return new AWS.TokenProviderChain();\n  },\n  useFipsEndpoint: function() {\n    var region = getRegion();\n    return isFipsRegion(region)\n      ? true\n      : util.loadConfig(USE_FIPS_ENDPOINT_CONFIG_OPTIONS);\n  },\n  useDualstackEndpoint: function() {\n    return util.loadConfig(USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS);\n  }\n});\n\n// Reset configuration\nAWS.config = new AWS.Config();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}