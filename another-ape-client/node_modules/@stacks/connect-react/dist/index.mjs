import C, { createContext, useContext, useReducer } from 'react';
import { authenticate, showBlockstackConnect, openContractCall, openContractDeploy, openSTXTransfer, openProfileUpdateRequestPopup, openSignatureRequestPopup, openStructuredDataSignatureRequestPopup, openPsbtRequestPopup } from '@stacks/connect';
export * from '@stacks/connect';

var w=Object.defineProperty,_=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var O=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var S=(n,e,a)=>e in n?w(n,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[e]=a,i=(n,e)=>{for(var a in e||(e={}))E.call(e,a)&&S(n,a,e[a]);if(O)for(var a of O(e))H.call(e,a)&&S(n,a,e[a]);return n},s=(n,e)=>_(n,I(e));var D={isOpen:!1,isAuthenticating:!1,authData:void 0,userSession:void 0,authOptions:{redirectTo:"",manifestPath:"",onFinish:()=>null,authOrigin:void 0,sendToSignIn:!1,appDetails:{name:"",icon:""}}},B=(n,{type:e,payload:a})=>{switch(e){case"data/update-auth-options":return s(i({},n),{authOptions:i(i({},n.authOptions),a)});default:throw new Error(`Unhandled action type: ${e}`)}},c=createContext(D),d=createContext(void 0),P=({authOptions:n,children:e})=>{let[a,t]=useReducer(B,D);return C.createElement(c.Provider,{value:s(i({},a),{authOptions:n})},C.createElement(d.Provider,{value:t},e))};var j=({authOptions:n,children:e})=>C.createElement(P,{authOptions:n},e);var W=()=>{let n=useContext(d);if(!n)throw new Error("This must be used within the ConnectProvider component.");return n},Y=()=>{let{isOpen:n,isAuthenticating:e,authData:a,authOptions:t,userSession:T}=useContext(c),A=W(),m=o=>A({type:"data/update-auth-options",payload:o}),v=(o,r,u)=>{if(o){let p=s(i(i({},t),r),{onFinish:X=>{var l;(l=t.onFinish)==null||l.call(t,X);},sendToSignIn:!0});authenticate(p,u);return}else showBlockstackConnect(s(i({},t),{sendToSignIn:!1}));t&&m(t);},y=(o={},r)=>{authenticate(s(i(i({},t),o),{onFinish:u=>{var p;(p=t.onFinish)==null||p.call(t,u);}}),r);};function R(o,r){return openContractCall(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}function x(o,r){return openContractDeploy(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}function U(o,r){return openSTXTransfer(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}function k(o,r){return openProfileUpdateRequestPopup(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}function q(o,r){return openSignatureRequestPopup(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}function F(o,r){return openStructuredDataSignatureRequestPopup(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}function b(o,r){return openPsbtRequestPopup(s(i({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),r)}return {isOpen:n,isAuthenticating:e,authData:a,authOptions:t,userSession:T,doOpenAuth:v,doAuth:y,authenticate:authenticate,doContractCall:R,doContractDeploy:x,doSTXTransfer:U,doProfileUpdate:k,sign:q,signStructuredData:F,signPsbt:b}};

export { j as Connect, Y as useConnect };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.mjs.map